@page "/record"
@using RW.VAC.Application.Contracts.Records
@using AntDesign.TableModels
@using RW.Framework.Extensions
@using RW.VAC.Domain.Records

@inject IProductionRecordService ProductionRecordService

<SectionContent SectionName="navBread">
	<NavBread>
		<NavTemplate>
			<BreadcrumbItem>生产记录</BreadcrumbItem>
		</NavTemplate>
	</NavBread>
</SectionContent>
<div class="rw-content">
	<Card Size="small">
		<Table @ref="_table"
		       TItem="ProductionRecordDto"
		       Bordered
		       DataSource="_recordList"
		       Total="_total"
		       Size="TableSize.Small"
		       PaginationPosition="bottomRight"
		       OnChange="LoadRecordData"
		       HidePagination="@(_total == 0)"
		       RemoteDataSource>
			<TitleTemplate>
				<Flex Justify="space-between" Align="center">
					<div>
						<Row Gutter="8">
							<Col>
								<Input TValue="string" @bind-value="@_request.SerialNumber" Placeholder="请输入产品编号"/>
							</Col>
							<Col>
								<RangePicker ShowTime="@("HH:mm:ss")" @bind-Value="@_request.DateRange"></RangePicker>
							</Col>
							<Col>
								<Button Type="@ButtonType.Primary" Icon="@IconType.Outline.Search" OnClick="Search"></Button>
							</Col>
						</Row>
					</div>
				</Flex>
			</TitleTemplate>
			<ColumnDefinitions>
				<PropertyColumn Title="生产编号" Property="c => c.SerialNumber"></PropertyColumn>
				<PropertyColumn Title="产品名称" Property="c => c.ProductName"></PropertyColumn>
				<PropertyColumn Title="产品编号" Property="c => c.ProductCode"></PropertyColumn>
				<PropertyColumn Title="开始时间" Property="c => c.StartTime"></PropertyColumn>
				<PropertyColumn Title="完成时间" Property="c => c.EndTime"></PropertyColumn>
				<PropertyColumn Title="状态" Property="c => c.Status" Style="width: 100px">
					@{
						var color = context.Status switch
						{
							ProdStatus.AbnormalOffline => "red-inverse",
							ProdStatus.BackOnline => "orange-inverse",
							ProdStatus.Completed => "green-inverse",
							_ => "blue-inverse"
						};
						<Tag Color="@color">@(context.Status.GetDescription())</Tag>
					}
				</PropertyColumn>
				<ActionColumn Title="操作" Align="ColumnAlign.Center" Style="width: 80px">
					<Space>
						<SpaceItem>
							<a href="/record/@(context.Id)">详情</a>
						</SpaceItem>
					</Space>
				</ActionColumn>
			</ColumnDefinitions>
		</Table>
	</Card>
</div>

@code {
	private IReadOnlyList<ProductionRecordDto>? _recordList;

	private int _total;

	private ITable? _table;

	private readonly ProdRecordPagedListRequestDto _request = new() {Sorting = new List<(string, bool)> {("StartTime", false)}};

	public async Task LoadRecordData(QueryModel<ProductionRecordDto> queryModel)
	{
		_request.PageIndex = queryModel.PageIndex;
		_request.Count = queryModel.PageSize;
		var result = await ProductionRecordService.GetPagedListAsync(_request);
		_recordList = result.Items;
		_total = (int) result.TotalCount;
	}

	public void Search()
	{
		_table?.ReloadData();
	}
}