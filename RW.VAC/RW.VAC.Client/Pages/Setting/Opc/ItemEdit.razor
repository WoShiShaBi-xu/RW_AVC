@using RW.VAC.Application.Contracts.Opcs

@inherits FeedbackComponent<FormOption<OpcItemCreateUpdateDto>>

@inject IOpcItemService OpcItemService

<Form @ref="_form" Model="@_model" LabelColSpan="6" ValidateOnChange="true">
	<FormItem Label="标记编码">
		<Input @bind-Value="@context.Code" MaxLength="50" />
	</FormItem>
	<FormItem Label="标记名称">
		<Input @bind-Value="@context.Name" MaxLength="50" />
	</FormItem>
	<!-- 新增工艺参数单选框 -->
	<FormItem Label="是否是工艺参数">
		<RadioGroup @bind-Value="@context.IsProcess">
			<Radio Value="false">否</Radio>
			<Radio Value="true">是</Radio>
		</RadioGroup>
	</FormItem>
	<FormItem Label="说明">
		<Input @bind-Value="@context.Description" MaxLength="100" />
	</FormItem>
</Form>
@code
{
	private OpcItemCreateUpdateDto _model = null!;
	private Form<OpcItemCreateUpdateDto>? _form;

	protected override void OnInitialized()
	{
		_model = base.Options.Data;
		base.OnInitialized();
	}

	public override async Task OnFeedbackOkAsync(ModalClosingEventArgs e)
	{
		if (_form!.Validate())
		{
			_ = base.Options.Id.HasValue ? await OpcItemService.UpdateAsync(base.Options.Id.Value, _model) : await OpcItemService.CreateAsync(_model);
		}
		else
		{
			e.Cancel= true;
		}
		await base.OnFeedbackOkAsync(e);
	}
}
